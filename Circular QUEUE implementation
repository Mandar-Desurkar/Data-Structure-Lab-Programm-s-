//CIRCULAR QUEUE//

#include<stdio.h>
#define N 5
int queue[N];
int Front=-1;
int Rear=-1;


void enqueue(int x)
{ 
    if(((Rear+1)%N)==Front)
    {
        printf("queue is full");
    }
    
    else if (Front==-1 && Rear ==-1)
    {
        Front=Rear=0;
        queue[Rear]=x;
    }
    
    else
    {
        Rear=(Rear+1)%N;
        queue[Rear]=x;
    }
}

void dequeue()
{  
    if (Front==-1 && Rear==-1)
    {
        printf("Underflow \n");
    }
    else if(Front==Rear)
    {
        Front=Rear=-1;
    }
    
    else
    {
        printf("%d",queue[Front]);
        Front=(Front+1)%N;
    }
    
}


void display()
{   int i=Front;
    if (Front==-1 && Rear==-1)
        printf("Empty Queue \n");
    else
    {
        printf("Queue: \n");
        while (i!=Rear)
        {
         printf("%d ", queue[i]);
         i=(i+1)%N;
        }
        
        printf("%d",queue[Rear]);
    }
}


int main()
{   int choice;
    int option=1;
    int x;
   
   
    while(option)
    {
        printf("\n Enter the Choice:\n 1.ENQUEUE Operation\n 2.DEQUEUE Operation\n 3.DISPLAY the Queue\n 4.EXIT\n");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
            {   printf("Enter the Data in QUEUE:");
                scanf("%d",&x);
                enqueue(x);
                break;
            }
            case 2:
            {
                dequeue();
                break;
            }
            case 3:
            {
                display();
                break;
            }
            case 4:
            {
                option=0;
                printf("\n EXIT POINT ");
                break;
                
            }
            default:
            {
                printf ("\nPlease Enter a Valid Choice(1/2/3/4)");
            }
                
        }
    }
    
}

